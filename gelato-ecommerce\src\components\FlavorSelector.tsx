import { motion, AnimatePresence } from 'framer-motion';\nimport { FaCheck, FaPlus } from 'react-icons/fa';\nimport { Flavor } from '../types';\n\ninterface FlavorSelectorProps {\n  flavors: Flavor[];\n  selectedFlavors: Flavor[];\n  onFlavorChange: (flavors: Flavor[]) => void;\n  maxSelection?: number;\n}\n\nconst FlavorSelector = ({ \n  flavors, \n  selectedFlavors, \n  onFlavorChange, \n  maxSelection = 5 \n}: FlavorSelectorProps) => {\n  \n  const handleFlavorToggle = (flavor: Flavor) => {\n    const isSelected = selectedFlavors.some(f => f.id === flavor.id);\n    \n    if (isSelected) {\n      // 取消選擇\n      onFlavorChange(selectedFlavors.filter(f => f.id !== flavor.id));\n    } else {\n      // 添加選擇\n      if (selectedFlavors.length < maxSelection) {\n        onFlavorChange([...selectedFlavors, flavor]);\n      }\n    }\n  };\n\n  const isFlavorSelected = (flavorId: string) => {\n    return selectedFlavors.some(f => f.id === flavorId);\n  };\n\n  const canSelectMore = selectedFlavors.length < maxSelection;\n\n  // 根據價格範圍分組口味\n  const groupFlavorsByPrice = (flavors: Flavor[]) => {\n    const groups = {\n      free: flavors.filter(f => f.price === 0),\n      low: flavors.filter(f => f.price > 0 && f.price <= 20),\n      medium: flavors.filter(f => f.price > 20 && f.price <= 35),\n      high: flavors.filter(f => f.price > 35)\n    };\n    return groups;\n  };\n\n  const flavorGroups = groupFlavorsByPrice(flavors);\n\n  const renderFlavorGroup = (title: string, groupFlavors: Flavor[], colorClass: string) => {\n    if (groupFlavors.length === 0) return null;\n\n    return (\n      <div className=\"mb-6\">\n        <h4 className={`font-medium text-sm mb-3 ${colorClass}`}>\n          {title} ({groupFlavors.length})\n        </h4>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n          {groupFlavors.map(flavor => {\n            const isSelected = isFlavorSelected(flavor.id);\n            const canSelect = canSelectMore || isSelected;\n            \n            return (\n              <motion.button\n                key={flavor.id}\n                onClick={() => canSelect && handleFlavorToggle(flavor)}\n                disabled={!canSelect}\n                className={`\n                  relative p-3 rounded-lg border-2 text-left transition-all duration-200\n                  ${isSelected \n                    ? 'border-blue-500 bg-blue-50 text-blue-800' \n                    : canSelect\n                    ? 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'\n                    : 'border-gray-200 bg-gray-50 text-gray-400 cursor-not-allowed'\n                  }\n                `}\n                whileHover={canSelect ? { scale: 1.02 } : {}}\n                whileTap={canSelect ? { scale: 0.98 } : {}}\n                layout\n              >\n                {/* 選中指示器 */}\n                <AnimatePresence>\n                  {isSelected && (\n                    <motion.div\n                      className=\"absolute top-1 right-1 bg-blue-500 text-white rounded-full p-1\"\n                      initial={{ scale: 0, opacity: 0 }}\n                      animate={{ scale: 1, opacity: 1 }}\n                      exit={{ scale: 0, opacity: 0 }}\n                      transition={{ type: 'spring', stiffness: 300 }}\n                    >\n                      <FaCheck className=\"text-xs\" />\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n\n                {/* 添加指示器 */}\n                {!isSelected && canSelect && (\n                  <div className=\"absolute top-1 right-1 text-gray-400\">\n                    <FaPlus className=\"text-xs\" />\n                  </div>\n                )}\n\n                {/* 口味信息 */}\n                <div className=\"space-y-1\">\n                  <h5 className=\"font-medium text-sm line-clamp-2\">\n                    {flavor.name}\n                  </h5>\n                  \n                  {flavor.description && (\n                    <p className=\"text-xs text-gray-500 line-clamp-1\">\n                      {flavor.description}\n                    </p>\n                  )}\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <span className={`text-sm font-bold ${\n                      flavor.price === 0 \n                        ? 'text-green-600' \n                        : isSelected \n                        ? 'text-blue-600' \n                        : 'text-gray-600'\n                    }`}>\n                      {flavor.price === 0 ? '免費' : `+NT$ ${flavor.price}`}\n                    </span>\n                  </div>\n                </div>\n\n                {/* 不可選擇時的遮罩 */}\n                {!canSelect && !isSelected && (\n                  <div className=\"absolute inset-0 bg-gray-100 bg-opacity-50 rounded-lg\" />\n                )}\n              </motion.button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 選擇狀態 */}\n      <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n        <div>\n          <span className=\"text-sm text-gray-600\">\n            已選擇 {selectedFlavors.length} / {maxSelection} 種口味\n          </span>\n          {selectedFlavors.length > 0 && (\n            <div className=\"text-xs text-gray-500 mt-1\">\n              額外費用：NT$ {selectedFlavors.reduce((sum, f) => sum + f.price, 0)}\n            </div>\n          )}\n        </div>\n        \n        {selectedFlavors.length > 0 && (\n          <button\n            onClick={() => onFlavorChange([])}\n            className=\"text-sm text-red-500 hover:text-red-700 transition-colors\"\n          >\n            清除全部\n          </button>\n        )}\n      </div>\n\n      {/* 已選擇的口味 */}\n      {selectedFlavors.length > 0 && (\n        <div className=\"space-y-2\">\n          <h4 className=\"font-medium text-sm text-gray-800\">已選擇的口味：</h4>\n          <div className=\"flex flex-wrap gap-2\">\n            {selectedFlavors.map(flavor => (\n              <motion.span\n                key={flavor.id}\n                className=\"inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full\"\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                exit={{ scale: 0, opacity: 0 }}\n                layout\n              >\n                {flavor.name}\n                {flavor.price > 0 && (\n                  <span className=\"ml-1 text-xs\">+${flavor.price}</span>\n                )}\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleFlavorToggle(flavor);\n                  }}\n                  className=\"ml-1 text-blue-600 hover:text-blue-800\"\n                >\n                  ×\n                </button>\n              </motion.span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* 口味選擇區域 */}\n      <div>\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-bold text-gray-800 mb-2\">可選口味</h3>\n          <p className=\"text-sm text-gray-600\">\n            點擊口味卡片進行選擇，最多可選擇 {maxSelection} 種口味\n          </p>\n        </div>\n\n        {/* 按價格分組顯示 */}\n        {renderFlavorGroup('免費口味', flavorGroups.free, 'text-green-600')}\n        {renderFlavorGroup('經濟口味 (NT$1-20)', flavorGroups.low, 'text-blue-600')}\n        {renderFlavorGroup('精選口味 (NT$21-35)', flavorGroups.medium, 'text-purple-600')}\n        {renderFlavorGroup('頂級口味 (NT$36+)', flavorGroups.high, 'text-red-600')}\n        \n        {flavors.length === 0 && (\n          <div className=\"text-center py-8 text-gray-500\">\n            暫無可選口味\n          </div>\n        )}\n      </div>\n\n      {/* 選擇限制提示 */}\n      {selectedFlavors.length >= maxSelection && (\n        <motion.div\n          className=\"p-3 bg-amber-50 border border-amber-200 rounded-lg\"\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          <p className=\"text-sm text-amber-800\">\n            🎯 已達到最大選擇數量 ({maxSelection} 種)。如需更換，請先取消其他選擇。\n          </p>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FlavorSelector;"
