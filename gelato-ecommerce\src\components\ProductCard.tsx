import { motion } from 'framer-motion';\nimport { FaCheck, FaImage } from 'react-icons/fa';\nimport { Product } from '../types';\n\ninterface ProductCardProps {\n  product: Product;\n  isSelected: boolean;\n  onSelect: (product: Product) => void;\n}\n\nconst ProductCard = ({ product, isSelected, onSelect }: ProductCardProps) => {\n  const handleClick = () => {\n    onSelect(product);\n  };\n\n  // 獲取主要圖片\n  const primaryImage = product.images?.length > 0 \n    ? product.images.find(img => img.imageOrder === 1) || product.images[0]\n    : null;\n\n  return (\n    <motion.div\n      className={`relative bg-white border-2 rounded-lg p-4 cursor-pointer transition-all duration-300 hover:shadow-lg ${\n        isSelected \n          ? 'border-blue-500 shadow-lg ring-2 ring-blue-200' \n          : 'border-gray-200 hover:border-gray-300'\n      }`}\n      onClick={handleClick}\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      layout\n    >\n      {/* 選中指示器 */}\n      {isSelected && (\n        <motion.div\n          className=\"absolute top-2 right-2 bg-blue-500 text-white rounded-full p-1\"\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ type: 'spring', stiffness: 300 }}\n        >\n          <FaCheck className=\"text-xs\" />\n        </motion.div>\n      )}\n\n      {/* 產品圖片 */}\n      <div className=\"aspect-square mb-3 bg-gray-100 rounded-lg overflow-hidden\">\n        {primaryImage ? (\n          <img\n            src={primaryImage.imageUrl}\n            alt={product.name}\n            className=\"w-full h-full object-cover\"\n            loading=\"lazy\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center text-gray-400\">\n            <FaImage className=\"text-2xl\" />\n          </div>\n        )}\n      </div>\n\n      {/* 產品信息 */}\n      <div className=\"space-y-2\">\n        <h3 className=\"font-bold text-gray-800 text-sm line-clamp-2\">\n          {product.name}\n        </h3>\n        \n        {product.description && (\n          <p className=\"text-xs text-gray-600 line-clamp-2\">\n            {product.description}\n          </p>\n        )}\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-lg font-bold text-blue-600\">\n              NT$ {product.basePrice}\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              {product.category === 'base' ? '基底' : '配料'}\n            </span>\n          </div>\n          \n          {/* 庫存狀態 */}\n          <div className=\"text-right\">\n            <span className={`text-xs px-2 py-1 rounded-full ${\n              product.stock > 10\n                ? 'bg-green-100 text-green-800'\n                : product.stock > 0\n                ? 'bg-yellow-100 text-yellow-800'\n                : 'bg-red-100 text-red-800'\n            }`}>\n              {product.stock > 0 ? `庫存 ${product.stock}` : '缺貨'}\n            </span>\n          </div>\n        </div>\n        \n        {/* 圖片指示器 */}\n        {product.images && product.images.length > 1 && (\n          <div className=\"flex justify-center space-x-1 mt-2\">\n            {product.images.slice(0, 5).map((_, index) => (\n              <div\n                key={index}\n                className=\"w-1.5 h-1.5 bg-gray-300 rounded-full\"\n              />\n            ))}\n            {product.images.length > 5 && (\n              <span className=\"text-xs text-gray-500 ml-1\">+{product.images.length - 5}</span>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* 缺貨遮罩 */}\n      {product.stock === 0 && (\n        <div className=\"absolute inset-0 bg-gray-900 bg-opacity-50 rounded-lg flex items-center justify-center\">\n          <span className=\"bg-red-500 text-white px-3 py-1 rounded-full text-sm font-medium\">\n            暫時缺貨\n          </span>\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default ProductCard;"
