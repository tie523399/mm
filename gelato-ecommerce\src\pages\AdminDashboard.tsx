import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  FaHome, 
  FaShoppingCart, 
  FaBox, 
  FaBullhorn, 
  FaCog, 
  FaSignOutAlt, 
  FaUser,
  FaBars,
  FaTimes,
  FaChartLine
} from 'react-icons/fa';
import { useNavigate, useLocation } from 'react-router-dom';
import { toast } from 'react-hot-toast';
import { useAuthStore } from '../store';
import { authAPI } from '../services/api';

// 導入各個管理模組組件\nimport DashboardOverview from '../components/admin/DashboardOverview';\nimport OrderManagement from '../components/admin/OrderManagement';\nimport ProductManagement from '../components/admin/ProductManagement';\nimport AnnouncementManagement from '../components/admin/AnnouncementManagement';\nimport SettingsPanel from '../components/admin/SettingsPanel';\n\nconst AdminDashboard = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user, logout } = useAuthStore();\n  \n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  // 根據URL路徑設置活躍標籤\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/admin' || path === '/admin/') {\n      setActiveTab('dashboard');\n    } else if (path.includes('/admin/orders')) {\n      setActiveTab('orders');\n    } else if (path.includes('/admin/products')) {\n      setActiveTab('products');\n    } else if (path.includes('/admin/announcements')) {\n      setActiveTab('announcements');\n    } else if (path.includes('/admin/settings')) {\n      setActiveTab('settings');\n    }\n  }, [location.pathname]);\n\n  // 導航菜單項目\n  const menuItems = [\n    {\n      id: 'dashboard',\n      label: '儀表板',\n      icon: FaHome,\n      path: '/admin'\n    },\n    {\n      id: 'orders',\n      label: '訂單管理',\n      icon: FaShoppingCart,\n      path: '/admin/orders'\n    },\n    {\n      id: 'products',\n      label: '產品管理',\n      icon: FaBox,\n      path: '/admin/products'\n    },\n    {\n      id: 'announcements',\n      label: '公告管理',\n      icon: FaBullhorn,\n      path: '/admin/announcements'\n    },\n    {\n      id: 'settings',\n      label: '系統設置',\n      icon: FaCog,\n      path: '/admin/settings'\n    }\n  ];\n\n  // 處理菜單點擊\n  const handleMenuClick = (item: typeof menuItems[0]) => {\n    setActiveTab(item.id);\n    navigate(item.path);\n    \n    // 在移動設備上關閉側邊欄\n    if (window.innerWidth < 1024) {\n      setIsSidebarOpen(false);\n    }\n  };\n\n  // 處理登出\n  const handleLogout = async () => {\n    try {\n      await authAPI.logout();\n      logout();\n      localStorage.removeItem('auth-token');\n      toast.success('已安全登出');\n      navigate('/');\n    } catch (error) {\n      console.error('登出失敗:', error);\n      // 即使API調用失敗，也要執行本地登出\n      logout();\n      localStorage.removeItem('auth-token');\n      navigate('/');\n    }\n  };\n\n  // 渲染內容區域\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return <DashboardOverview />;\n      case 'orders':\n        return <OrderManagement />;\n      case 'products':\n        return <ProductManagement />;\n      case 'announcements':\n        return <AnnouncementManagement />;\n      case 'settings':\n        return <SettingsPanel />;\n      default:\n        return <DashboardOverview />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* 側邊欄 */}\n      <AnimatePresence mode=\"wait\">\n        {isSidebarOpen && (\n          <>\n            {/* 移動設備遮罩 */}\n            <motion.div\n              className=\"fixed inset-0 bg-black bg-opacity-50 z-20 lg:hidden\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              onClick={() => setIsSidebarOpen(false)}\n            />\n            \n            {/* 側邊欄內容 */}\n            <motion.div\n              className=\"fixed lg:static inset-y-0 left-0 z-30 w-64 bg-white shadow-xl lg:shadow-none\"\n              initial={{ x: '-100%' }}\n              animate={{ x: 0 }}\n              exit={{ x: '-100%' }}\n              transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n            >\n              {/* 側邊欄頭部 */}\n              <div className=\"flex items-center justify-between p-6 border-b\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"text-2xl\">🍨</div>\n                  <div>\n                    <h1 className=\"font-bold text-gray-800\">管理後台</h1>\n                    <p className=\"text-xs text-gray-600\">海水不可斗量</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsSidebarOpen(false)}\n                  className=\"lg:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <FaTimes className=\"text-gray-600\" />\n                </button>\n              </div>\n\n              {/* 用戶信息 */}\n              <div className=\"p-4 border-b\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center\">\n                    <FaUser className=\"text-white\" />\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-800\">{user?.username}</p>\n                    <p className=\"text-sm text-gray-600\">管理員</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* 導航菜單 */}\n              <nav className=\"flex-1 p-4\">\n                <ul className=\"space-y-2\">\n                  {menuItems.map(item => {\n                    const Icon = item.icon;\n                    const isActive = activeTab === item.id;\n                    \n                    return (\n                      <li key={item.id}>\n                        <button\n                          onClick={() => handleMenuClick(item)}\n                          className={`w-full flex items-center space-x-3 p-3 rounded-lg transition-colors ${\n                            isActive\n                              ? 'bg-blue-500 text-white'\n                              : 'text-gray-700 hover:bg-gray-100'\n                          }`}\n                        >\n                          <Icon className={`text-lg ${isActive ? 'text-white' : 'text-gray-500'}`} />\n                          <span className=\"font-medium\">{item.label}</span>\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </nav>\n\n              {/* 登出按鈕 */}\n              <div className=\"p-4 border-t\">\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 p-3 rounded-lg text-red-600 hover:bg-red-50 transition-colors\"\n                >\n                  <FaSignOutAlt className=\"text-lg\" />\n                  <span className=\"font-medium\">登出</span>\n                </button>\n              </div>\n            </motion.div>\n          </>\n        )}\n      </AnimatePresence>\n\n      {/* 主要內容區域 */}\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        {/* 頂部導航欄 */}\n        <header className=\"bg-white shadow-sm border-b\">\n          <div className=\"flex items-center justify-between p-4\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                className=\"p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n              >\n                <FaBars className=\"text-gray-600\" />\n              </button>\n              \n              <div>\n                <h2 className=\"text-xl font-bold text-gray-800\">\n                  {menuItems.find(item => item.id === activeTab)?.label || '儀表板'}\n                </h2>\n                <p className=\"text-sm text-gray-600\">\n                  {new Date().toLocaleDateString('zh-TW', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric',\n                    weekday: 'long'\n                  })}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              {/* 快速統計 */}\n              <div className=\"hidden md:flex items-center space-x-4 text-sm\">\n                <div className=\"flex items-center space-x-1 text-green-600\">\n                  <FaChartLine />\n                  <span>營運正常</span>\n                </div>\n              </div>\n              \n              {/* 用戶頭像 */}\n              <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n                <FaUser className=\"text-white text-sm\" />\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* 內容區域 */}\n        <main className=\"flex-1 p-6 overflow-auto\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.2 }}\n          >\n            {renderContent()}\n          </motion.div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;"
