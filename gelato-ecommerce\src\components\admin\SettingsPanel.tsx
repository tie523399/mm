import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  FaKey, \n  FaSave, \n  FaEye, \n  FaEyeSlash,\n  FaSpinner,\n  FaUser,\n  FaCog,\n  FaDatabase,\n  FaBell,\n  FaShield\n} from 'react-icons/fa';\nimport { toast } from 'react-hot-toast';\nimport { useAuthStore } from '../../store';\nimport { authAPI } from '../../services/api';\n\nconst SettingsPanel = () => {\n  const { user } = useAuthStore();\n  const [activeTab, setActiveTab] = useState('profile');\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  \n  const [passwordForm, setPasswordForm] = useState({\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  // 處理密碼變更\n  const handleChangePassword = async () => {\n    if (!passwordForm.oldPassword) {\n      toast.error('請輸入目前密碼');\n      return;\n    }\n    \n    if (!passwordForm.newPassword) {\n      toast.error('請輸入新密碼');\n      return;\n    }\n    \n    if (passwordForm.newPassword.length < 6) {\n      toast.error('新密碼至少需要6個字元');\n      return;\n    }\n    \n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      toast.error('新密碼確認不一致');\n      return;\n    }\n\n    setIsChangingPassword(true);\n    try {\n      const response = await authAPI.changePassword(\n        passwordForm.oldPassword,\n        passwordForm.newPassword\n      );\n      \n      if (response.success) {\n        toast.success('密碼已成功更新');\n        setPasswordForm({\n          oldPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        });\n      } else {\n        toast.error(response.message || '密碼更新失敗');\n      }\n    } catch (error) {\n      console.error('密碼更新失敗:', error);\n      toast.error('密碼更新失敗，請檢查目前密碼是否正確');\n    } finally {\n      setIsChangingPassword(false);\n    }\n  };\n\n  const tabs = [\n    { id: 'profile', label: '個人資料', icon: FaUser },\n    { id: 'security', label: '安全設定', icon: FaShield },\n    { id: 'system', label: '系統設定', icon: FaCog },\n    { id: 'notifications', label: '通知設定', icon: FaBell },\n    { id: 'database', label: '數據管理', icon: FaDatabase }\n  ];\n\n  const renderProfileTab = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <h3 className=\"font-medium text-blue-800 mb-2\">個人資料</h3>\n        <p className=\"text-sm text-blue-600\">\n          查看和管理您的個人資料信息\n        </p>\n      </div>\n      \n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            用戶名\n          </label>\n          <input\n            type=\"text\"\n            value={user?.username || ''}\n            disabled\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">用戶名無法修改</p>\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            電子郵件\n          </label>\n          <input\n            type=\"email\"\n            value={user?.email || ''}\n            disabled\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            角色\n          </label>\n          <input\n            type=\"text\"\n            value=\"管理員\"\n            disabled\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            創建時間\n          </label>\n          <input\n            type=\"text\"\n            value={user?.createdAt ? new Date(user.createdAt).toLocaleString('zh-TW') : ''}\n            disabled\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSecurityTab = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n        <h3 className=\"font-medium text-amber-800 mb-2\">安全提醒</h3>\n        <p className=\"text-sm text-amber-600\">\n          為了保障系統安全，建議定期更新密碼，並使用強密碼\n        </p>\n      </div>\n      \n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center space-x-2\">\n          <FaKey className=\"text-blue-500\" />\n          <span>更改密碼</span>\n        </h3>\n        \n        <div className=\"space-y-4\">\n          {/* 目前密碼 */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              目前密碼 *\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showOldPassword ? 'text' : 'password'}\n                value={passwordForm.oldPassword}\n                onChange={(e) => setPasswordForm(prev => ({ ...prev, oldPassword: e.target.value }))}\n                className=\"w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"請輸入目前密碼\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowOldPassword(!showOldPassword)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n              >\n                {showOldPassword ? <FaEyeSlash /> : <FaEye />}\n              </button>\n            </div>\n          </div>\n          \n          {/* 新密碼 */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              新密碼 *\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showNewPassword ? 'text' : 'password'}\n                value={passwordForm.newPassword}\n                onChange={(e) => setPasswordForm(prev => ({ ...prev, newPassword: e.target.value }))}\n                className=\"w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"請輸入新密碼 (至少6個字元)\"\n                minLength={6}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowNewPassword(!showNewPassword)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n              >\n                {showNewPassword ? <FaEyeSlash /> : <FaEye />}\n              </button>\n            </div>\n            {passwordForm.newPassword && passwordForm.newPassword.length < 6 && (\n              <p className=\"text-xs text-red-500 mt-1\">密碼至少需要6個字元</p>\n            )}\n          </div>\n          \n          {/* 確認新密碼 */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              確認新密碼 *\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showConfirmPassword ? 'text' : 'password'}\n                value={passwordForm.confirmPassword}\n                onChange={(e) => setPasswordForm(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                className=\"w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"請再次輸入新密碼\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600\"\n              >\n                {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\n              </button>\n            </div>\n            {passwordForm.confirmPassword && passwordForm.newPassword !== passwordForm.confirmPassword && (\n              <p className=\"text-xs text-red-500 mt-1\">密碼確認不一致</p>\n            )}\n          </div>\n          \n          {/* 提交按鈕 */}\n          <div className=\"pt-4\">\n            <button\n              onClick={handleChangePassword}\n              disabled={isChangingPassword || !passwordForm.oldPassword || !passwordForm.newPassword || passwordForm.newPassword !== passwordForm.confirmPassword}\n              className=\"flex items-center space-x-2 bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n            >\n              {isChangingPassword ? (\n                <FaSpinner className=\"animate-spin\" />\n              ) : (\n                <FaSave />\n              )}\n              <span>{isChangingPassword ? '更新中...' : '更新密碼'}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSystemTab = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n        <h3 className=\"font-medium text-green-800 mb-2\">系統設定</h3>\n        <p className=\"text-sm text-green-600\">\n          配置系統運行參數和功能設定\n        </p>\n      </div>\n      \n      <div className=\"grid gap-6\">\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">基本設定</h3>\n          <div className=\"space-y-4\">\n            <label className=\"flex items-center space-x-3\">\n              <input type=\"checkbox\" defaultChecked className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\" />\n              <span className=\"text-sm text-gray-700\">啟用訂單通知</span>\n            </label>\n            <label className=\"flex items-center space-x-3\">\n              <input type=\"checkbox\" defaultChecked className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\" />\n              <span className=\"text-sm text-gray-700\">啟用庫存警告</span>\n            </label>\n            <label className=\"flex items-center space-x-3\">\n              <input type=\"checkbox\" defaultChecked className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\" />\n              <span className=\"text-sm text-gray-700\">啟用自動備份</span>\n            </label>\n          </div>\n        </div>\n        \n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Railway 部署設定</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                服務器狀態\n              </label>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <span className=\"text-sm text-green-600\">運行中</span>\n              </div>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                數據庫類型\n              </label>\n              <input\n                type=\"text\"\n                value=\"SQLite\"\n                disabled\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderNotificationsTab = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n        <h3 className=\"font-medium text-purple-800 mb-2\">通知設定</h3>\n        <p className=\"text-sm text-purple-600\">\n          管理 Telegram Bot 和其他通知服務\n        </p>\n      </div>\n      \n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Telegram 通知</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Bot Token\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"請輸入 Telegram Bot Token\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              群組 ID\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"請輸入 Telegram 群組 ID\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <button className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\">\n            測試連接\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDatabaseTab = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <h3 className=\"font-medium text-red-800 mb-2\">數據管理</h3>\n        <p className=\"text-sm text-red-600\">\n          ⚠️ 請謹慎操作，數據操作可能無法復原\n        </p>\n      </div>\n      \n      <div className=\"grid gap-6\">\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">數據備份</h3>\n          <div className=\"space-y-3\">\n            <button className=\"w-full bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\">\n              立即備份數據\n            </button>\n            <p className=\"text-sm text-gray-600\">\n              上次備份：2025-01-21 10:30:00\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">數據清理</h3>\n          <div className=\"space-y-3\">\n            <button className=\"w-full bg-orange-500 text-white py-2 px-4 rounded-lg hover:bg-orange-600 transition-colors\">\n              清理過期訂單 (30天前)\n            </button>\n            <button className=\"w-full bg-red-500 text-white py-2 px-4 rounded-lg hover:bg-red-600 transition-colors\">\n              重置所有數據\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'profile':\n        return renderProfileTab();\n      case 'security':\n        return renderSecurityTab();\n      case 'system':\n        return renderSystemTab();\n      case 'notifications':\n        return renderNotificationsTab();\n      case 'database':\n        return renderDatabaseTab();\n      default:\n        return renderProfileTab();\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 標籤導航 */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {tabs.map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"text-lg\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n      </div>\n\n      {/* 內容區域 */}\n      <motion.div\n        key={activeTab}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        {renderContent()}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default SettingsPanel;"
